name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create changelog for release
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: 'changelog.config.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          body: ${{ steps.github_release.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha')}}

  deploy:
    needs: [release]
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set env variables
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set package.json version
        uses: wurielle/package-version-action@v1
        with:
          version: ${{ env.RELEASE_VERSION }}
          targets: |
            ./package.json
            ./apps/app/package.json
      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Build
        uses: borales/actions-yarn@v4
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          VUE_APP_ENCRYPTION_KEY: ${{ secrets.APP_ENCRYPTION_KEY }}
        with:
          cmd: build
      - name: Cleanup electron dist
        shell: bash
        working-directory: apps/app/dist_electron
        run: |
          rm -rf win-unpacked linux-unpacked mac builder-debug.yml bundled
          ls -l ./
      - name: Upload artifacts to Release
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./apps/app/dist_electron/*"]'
      - name: Rollback Release
        if: failure()
        uses: author/action-rollback@stable
        with:
          tag: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
